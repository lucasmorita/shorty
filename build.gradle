plugins {
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.2.0'
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'org.eldron'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.4.5'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.assertj:assertj-core:3.19.0'
    testImplementation 'io.cucumber:cucumber-junit:6.10.3'
    testImplementation 'io.cucumber:cucumber-java:6.10.3'
    testImplementation 'io.cucumber:cucumber-spring:6.10.3'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:6.10.3'
    testImplementation "com.github.tomakehurst:wiremock-jre8:2.28.0"
    testImplementation group: 'com.h2database', name: 'h2', version: '1.3.148'
    runtimeOnly 'mysql:mysql-connector-java'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'org.eldron.shorty.integration.step', 'src/test/resources']
            def jacocoAgent = zipTree(configurations.jacocoAgent.singleFile).filter { it.name == "jacocoagent.jar" }.singleFile
            jvmArgs = ["-javaagent:$jacocoAgent=destfile=$buildDir/results/jacoco/cucumber.exec,append=false"]
        }
    }
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    executionData(files("$buildDir/jacoco/test.exec", "$buildDir/results/jacoco/cucumber.exec"))
    reports {
        xml.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "shorty"
        property "sonar.projectKey", "3ldr0n_shorty"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "3ldr0n"
        property "sonar.exclusions", "**/*Configuration.java, **/ShortyApplication.java"
    }
}

